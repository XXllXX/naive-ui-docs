import{_ as j,u as k,a as C,b as N,c as m,r as d,o as v,d as g,e as l,f as t,w as n,g as e,n as y,h as S}from"./index-9afb4b71.js";const V={components:{},setup(){const s=k(),c=C(()=>!s.value),i=s;return{showAnchor:c,displayMode:N(),wrapperStyle:m(()=>i.value?"padding: 16px 16px 24px 16px;":"display: flex; flex-wrap: nowrap; padding: 32px 24px 56px 56px;"),contentStyle:m(()=>c.value?"width: calc(100% - 228px); margin-right: 36px;":"width: 100%; padding-right: 12px;"),url:"D:/Code/naive-ui/demo/pages/docs/controlled-uncontrolled/zhCN/index.md"}}},M=l("pre",null,[l("span",{class:"hljs-tag"},[e("<"),l("span",{class:"hljs-name"},"n-input"),e(" @"),l("span",{class:"hljs-attr"},"update:value"),e("="),l("span",{class:"hljs-string"},'"handleUpdateValue"'),e(" />")])],-1),z=l("pre",null,[l("span",{class:"hljs-tag"},[e("<"),l("span",{class:"hljs-name"},"n-input"),e(),l("span",{class:"hljs-attr"},":value"),e("="),l("span",{class:"hljs-string"},'"value"'),e(" @"),l("span",{class:"hljs-attr"},"update:value"),e("="),l("span",{class:"hljs-string"},'"handleUpdateValue"'),e(" />")])],-1),A={key:0,style:{width:"192px"}};function B(s,c,i,u,D,R){const b=d("edit-on-github-header"),o=d("n-p"),r=d("n-h2"),a=d("n-text"),_=d("n-code"),f=d("n-scrollbar"),h=d("n-card"),x=d("n-h3"),p=d("n-anchor-link"),w=d("n-anchor");return v(),g("div",{class:"doc",style:y(u.wrapperStyle)},[l("div",{style:y(u.contentStyle)},[t(b,{"relative-url":"D:/Code/naive-ui/demo/pages/docs/controlled-uncontrolled/zhCN/index.md",text:"受控模式与非受控模式"}),t(o,null,{default:n(()=>[e("一个组件的行为可以分为受控模式和非受控模式两种。非受控模式指的是只监听组件的变化，而不去控制组件的 value，受控模式指的是控制组件的值。")]),_:1}),t(r,{id:"非受控模式"},{default:n(()=>[e("非受控模式")]),_:1}),t(o,null,{default:n(()=>[e("在这种情况下，你不去控制 "),t(a,{code:""},{default:n(()=>[e("<n-input />")]),_:1}),e(" 的 "),t(a,{code:""},{default:n(()=>[e("value")]),_:1}),e("，而只能监听它的变化，组件值的变化由组件自身控制。")]),_:1}),t(h,{embedded:"",bordered:!1,class:"md-card","content-style":"padding: 0;"},{default:n(()=>[t(f,{"x-scrollable":"","content-style":"padding: 16px;"},{default:n(()=>[t(_,null,{default:n(()=>[M]),_:1})]),_:1})]),_:1}),t(r,{id:"受控模式"},{default:n(()=>[e("受控模式")]),_:1}),t(o,null,{default:n(()=>[e("在这种情况下，你既监听了组件的变化，然后也控制了组件的值。如果你不更新 "),t(a,{code:""},{default:n(()=>[e("value")]),_:1}),e("，那么组件的值不会改变，组件值的变化由你控制。")]),_:1}),t(h,{embedded:"",bordered:!1,class:"md-card","content-style":"padding: 0;"},{default:n(()=>[t(f,{"x-scrollable":"","content-style":"padding: 16px;"},{default:n(()=>[t(_,null,{default:n(()=>[z]),_:1})]),_:1})]),_:1}),t(x,{id:"<n-text-code>v-model</n-text>"},{default:n(()=>[t(a,{code:""},{default:n(()=>[e("v-model")]),_:1})]),_:1}),t(o,null,{default:n(()=>[t(a,{code:""},{default:n(()=>[e("v-model")]),_:1}),e(" 控制的组件在受控模式下，因为 "),t(a,{code:""},{default:n(()=>[e("v-model")]),_:1}),e(" 等同于 "),t(a,{code:""},{default:n(()=>[e(":model-value")]),_:1}),e(" 和 "),t(a,{code:""},{default:n(()=>[e("@update:model-value")]),_:1}),e(" 的组合。")]),_:1}),t(r,{id:"naive-ui-中的受控模式"},{default:n(()=>[e("naive-ui 中的受控模式")]),_:1}),t(o,null,{default:n(()=>[e("不同的组件库区分受控与非受控模式的区别是不同的。在 naive-ui 中，只要 "),t(a,{code:""},{default:n(()=>[e("value")]),_:1}),e(" 是 "),t(a,{code:""},{default:n(()=>[e("undefined")]),_:1}),e(" 或者根本没有传，那么组件的值会是非受控的。也就是说你将一个组件的值设为 "),t(a,{code:""},{default:n(()=>[e("undefined")]),_:1}),e(" 并不能清空它，只会改变它的控制模式。一般情况下清空可以使用 "),t(a,{code:""},{default:n(()=>[e("null")]),_:1}),e("。")]),_:1}),t(x,{id:"不止-<n-text-code>value</n-text>"},{default:n(()=>[e("不止 "),t(a,{code:""},{default:n(()=>[e("value")]),_:1})]),_:1}),t(o,null,{default:n(()=>[e("任何 "),t(a,{code:""},{default:n(()=>[e("xxx")]),_:1}),e(" 与 "),t(a,{code:""},{default:n(()=>[e("@update:xxx")]),_:1}),e(" 的属性对都可以有受控和非受控模式。")]),_:1})],4),u.showAnchor?(v(),g("div",A,[t(w,{"internal-scrollable":"",bound:16,type:"block",style:{width:"192px",position:"sticky",top:"32px","max-height":"calc(100vh - 32px - 64px)",height:"auto"},"offset-target":"#doc-layout","ignore-gap":!0},{default:n(()=>[t(p,{title:"非受控模式",href:"#非受控模式"}),t(p,{title:"受控模式",href:"#受控模式"}),t(p,{title:"naive-ui 中的受控模式",href:"#naive-ui-中的受控模式"})]),_:1})])):S("",!0)],4)}const E=j(V,[["render",B]]);export{E as default};
